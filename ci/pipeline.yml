---
#@ load("funcs.lib.yml", "slack_hook", "pr_hook")
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#@ env = data.values.env

#!  JOBS

jobs:
  - name: set-pipeline
    plan:
      - get: src
        params:
          depth: 1
        trigger: true
      - get: pipeline-tasks
      - get: general-task
      - task: boot
        image: general-task
        file: pipeline-tasks/tasks/boot.yml
        params:
          ENV_OVERRIDE: ((deploy-env))
      - set_pipeline: self
        file: compiled/set-pipeline.yml
        instance_vars:
          deploy-env: ((deploy-env))

  - name: deploy-pages-website-watcher
    plan:
      - get: src
        params:
          depth: 1
        trigger: true
        passed: [set-pipeline]
      - get: general-task
      - get: pipeline-tasks
      - task: deploy
        file: src/ci/partials/deploy.yml
        image: general-task
        params:
          _: #@ template.replace(data.values.env_cf_editor)
          CF_APP_NAME: pages-website-watcher-((deploy-env))
          CF_MANIFEST: src/.cloudgov/manifest.yml
          CF_VARS_FILE: src/.cloudgov/vars/((deploy-env)).yml
          CF_PATH: src
        on_failure:
          try:
            task: cancel-api-deployment
            file: pipeline-tasks/tasks/cancel-deployment.yml
            image: general-task
            params:
              _: #@ template.replace(data.values.env_cf_editor)
              CF_APP_NAME: pages-((deploy-env))

#!  RESOURCES

resources:
  - name: src
    type: git
    icon: github
    source:
      uri: git@github.com:((pages-website-watcher-repository-path))
      branch: main
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))
      private_key: ((pages-gpg-operations-github-sshkey.private_key))

  - name: general-task
  - name: pipeline-tasks

#!  RESOURCE TYPES

resource_types:
  - name: git
  - name: registry-image
