---
#@ load("funcs.lib.yml", "slack_hook", "pr_hook")
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#@ env = data.values.env

#!  JOBS

jobs:
  - name: set-pipeline
    plan:
      - get: src
        params:
          #@ if/end env != 'dev':
          depth: 1
          #@ if/end env == 'dev':
          integration_tool: checkout
        trigger: true
      - get: pipeline-tasks
      - get: general-task
      - task: boot
        image: general-task
        file: pipeline-tasks/tasks/boot.yml
        params:
          ENV_OVERRIDE: ((deploy-env))
      - set_pipeline: self
        file: compiled/set-pipeline.yml
        instance_vars:
          deploy-env: ((deploy-env))

  - name: test
    plan:
      - get: src
        params:
          #@ if/end env != 'dev':
          depth: 1
          #@ if/end env == 'dev':
          integration_tool: checkout
        passed: [set-pipeline]
        trigger: true
      - get: general-task
      - get: node22
      - in_parallel:
        - task: check-format
          file: src/ci/partials/check-formatting.yml
          image: node22
        - task: test
          file: src/ci/partials/test.yml
          image: node22

    on_failure:
      in_parallel:
        -  #@ slack_hook("failure", "tests failed")
        #@ if/end env == 'dev':
        -  #@ pr_hook("failure", "test-pages-site-gantry")
    on_success:
      in_parallel:
        #@ if/end env == 'dev':
        -  #@ pr_hook("success", "test-pages-site-gantry")

  - name: new-deploys
    plan:
      - get: src
        params:
          #@ if/end env != 'dev':
          depth: 1
          #@ if/end env == 'dev':
          integration_tool: checkout
        #@ if/end env == 'dev':
        passed: [set-pipeline]
        #@ if/end env != 'dev':
        passed: [test]
        trigger: true
      - get: s3
        resource: s3-active-site-configs
        trigger: true
      - get: general-task
      - task: ls-sites
        file: src/ci/partials/ls-sites.yml
        image: general-task
      - load_var: sites
        file: s3/sites.json
      - across:
          - var: site
            values: ((.:sites))
            max_in_flight: 20
        do:
          - task: deploy-site-gantry
            file: src/ci/partials/deploy.yml
            image: general-task
            params:
              _: #@ template.replace(data.values.env_cf_editor)
              CF_APP_NAME: site-preview_((.:site.slug))
              CF_MANIFEST: src/.cloudgov/manifest.yml
              CF_VARS_FILE: src/.cloudgov/vars/((deploy-env)).yml
              CF_PATH: src
              SITE: ((.:site.slug))
              API_KEY: ((.:site.apiKey))

    on_failure:
      in_parallel:
        -  #@ slack_hook("failure", "deploy preview apps")
        #@ if/end env == 'dev':
        -  #@ pr_hook("failure", "deploy-pages-site-gantry-previews")
    on_success:
      in_parallel:
        #@ if/end env == 'dev':
        -  #@ pr_hook("success", "deploy-pages-site-gantry-previews")

  - name: delete-deploys
    plan:
      - get: src
        params:
          #@ if/end env != 'dev':
          depth: 1
          #@ if/end env == 'dev':
          integration_tool: checkout
        passed: [set-pipeline]
      - get: s3
        resource: s3-deleted-site-configs
        trigger: true
      - get: general-task
      - task: ls-sites
        file: src/ci/partials/ls-sites.yml
        image: general-task
      - load_var: sites
        file: s3/sites.json
      - across:
          - var: site
            values: ((.:sites))
            max_in_flight: 20
        do:
          - task: delete-site-preview
            file: src/ci/partials/delete-app.yml
            image: general-task
            params:
              _: #@ template.replace(data.values.env_cf_editor)
              CF_APP_NAME: site-preview_((.:site.slug))
              CF_PATH: src
              HOSTNAME: ((.:site.slug))
              S3_SERVICE_INSTANCE_NAME: pages-editor-((deploy-env))-s3
              S3_SITE_CONFIG_KEY: _sites/deleted/((.:site.slug)).json

    on_failure:
      in_parallel:
        -  #@ slack_hook("failure", "delete site preview apps")
    on_success:
      in_parallel:
        -  #@ slack_hook("success", "delete site preview apps")

#!  RESOURCES

resources:
  #@ if/end env == 'dev':
  - name: src
    type: pull-request
    check_every: 1m
    source:
      repository: ((pages-site-gantry-repository-path))
      access_token: ((pages-operations-ci-github-token))
      base_branch: main
      disable_forks: true
      ignore_drafts: true

  #@ if/end env == 'staging':
  - name: src
    type: git
    icon: github
    source:
      uri: git@github.com:((pages-website-watcher-repository-path))
      branch: main
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))
      private_key: ((pages-gpg-operations-github-sshkey.private_key))

  - name: general-task
  - name: node22
  - name: pipeline-tasks

  - name: s3-active-site-configs
    type: s3-resource
    source:
      access_key_id: ((editor-site-data-access-key-id-((deploy-env))))
      secret_access_key: ((editor-site-data-secret-access-key-((deploy-env))))
      path: _sites/active/
      bucket: ((editor-site-data-bucket-((deploy-env))))
      region: us-gov-west-1

  - name: s3-deleted-site-configs
    type: s3-resource
    source:
      access_key_id: ((editor-site-data-access-key-id-((deploy-env))))
      secret_access_key: ((editor-site-data-secret-access-key-((deploy-env))))
      path: _sites/deleted/
      bucket: ((editor-site-data-bucket-((deploy-env))))
      region: us-gov-west-1
  - name: slack

#!  RESOURCE TYPES

resource_types:
  - name: git
  - name: registry-image
  - name: s3-resource
  - name: slack-notification
  #@ if/end env == 'dev':
  - name: pull-request
