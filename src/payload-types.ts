/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | "Pacific/Midway"
  | "Pacific/Niue"
  | "Pacific/Honolulu"
  | "Pacific/Rarotonga"
  | "America/Anchorage"
  | "Pacific/Gambier"
  | "America/Los_Angeles"
  | "America/Tijuana"
  | "America/Denver"
  | "America/Phoenix"
  | "America/Chicago"
  | "America/Guatemala"
  | "America/New_York"
  | "America/Bogota"
  | "America/Caracas"
  | "America/Santiago"
  | "America/Buenos_Aires"
  | "America/Sao_Paulo"
  | "Atlantic/South_Georgia"
  | "Atlantic/Azores"
  | "Atlantic/Cape_Verde"
  | "Europe/London"
  | "Europe/Berlin"
  | "Africa/Lagos"
  | "Europe/Athens"
  | "Africa/Cairo"
  | "Europe/Moscow"
  | "Asia/Riyadh"
  | "Asia/Dubai"
  | "Asia/Baku"
  | "Asia/Karachi"
  | "Asia/Tashkent"
  | "Asia/Calcutta"
  | "Asia/Dhaka"
  | "Asia/Almaty"
  | "Asia/Jakarta"
  | "Asia/Bangkok"
  | "Asia/Shanghai"
  | "Asia/Singapore"
  | "Asia/Tokyo"
  | "Asia/Seoul"
  | "Australia/Brisbane"
  | "Australia/Sydney"
  | "Pacific/Guam"
  | "Pacific/Noumea"
  | "Pacific/Auckland"
  | "Pacific/Fiji";

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    posts: Post;
    events: Event;
    news: News;
    reports: Report;
    resources: Resource;
    leadership: Leadership;
    pages: Page;
    policies: Policy;
    media: Media;
    categories: Category;
    sites: Site;
    "menu-site-collection": MenuSiteCollection;
    "site-config-site-collection": SiteConfigSiteCollection;
    redirects: Redirect;
    forms: Form;
    "form-submissions": FormSubmission;
    search: Search;
    users: User;
    "payload-locked-documents": PayloadLockedDocument;
    "payload-preferences": PayloadPreference;
    "payload-migrations": PayloadMigration;
  };
  collectionsJoins: {
    sites: {
      users: "users";
    };
  };
  collectionsSelect: {
    posts: PostsSelect<false> | PostsSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    reports: ReportsSelect<false> | ReportsSelect<true>;
    resources: ResourcesSelect<false> | ResourcesSelect<true>;
    leadership: LeadershipSelect<false> | LeadershipSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    policies: PoliciesSelect<false> | PoliciesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    sites: SitesSelect<false> | SitesSelect<true>;
    "menu-site-collection":
      | MenuSiteCollectionSelect<false>
      | MenuSiteCollectionSelect<true>;
    "site-config-site-collection":
      | SiteConfigSiteCollectionSelect<false>
      | SiteConfigSiteCollectionSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    "form-submissions":
      | FormSubmissionsSelect<false>
      | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    "payload-locked-documents":
      | PayloadLockedDocumentsSelect<false>
      | PayloadLockedDocumentsSelect<true>;
    "payload-preferences":
      | PayloadPreferencesSelect<false>
      | PayloadPreferencesSelect<true>;
    "payload-migrations":
      | PayloadMigrationsSelect<false>
      | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    "site-config": SiteConfig;
    menu: Menu;
  };
  globalsSelect: {
    "site-config": SiteConfigSelect<false> | SiteConfigSelect<true>;
    menu: MenuSelect<false> | MenuSelect<true>;
  };
  locale: null;
  user: User & {
    collection: "users";
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Articles, updates, or blog content used to share ideas, news, or stories.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * A description to be used as a summary
   */
  description?: string | null;
  /**
   * This featured image will be used as a thumbnail and cover image
   */
  image?: (number | null) | Media;
  categories?: (number | Category)[] | null;
  site: number | Site;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  reviewReady?: boolean | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  "Example Custom Field"?:
    | ("radio" | "television" | "podcast" | "video")
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Site-wide images, videos, and files used across pages and content.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  altText?: string | null;
  site: number | Site;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Multi-site management
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites".
 */
export interface Site {
  id: number;
  name: string;
  initialManagerEmail: string;
  pagesOrg?: string | null;
  pagesSiteId?: number | null;
  orgId?: number | null;
  bucket?: string | null;
  users?: {
    docs?: (number | User)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage who can access and edit the site, including roles and permissions.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  email: string;
  sub: string;
  sites: {
    site: number | Site;
    role: "manager" | "user" | "bot";
    id?: string | null;
  }[];
  isAdmin?: boolean | null;
  selectedSiteId: number;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
}
/**
 * Tags or groupings used to organize and filter content across the site.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  site: number | Site;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Details for upcoming or past events, including dates, locations, and descriptions.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  /**
   * Details for upcoming or past events, including dates, locations, and descriptions.
   */
  title: string;
  location?: string | null;
  registrationUrl?: string | null;
  /**
   * A description to be used as a summary
   */
  description?: string | null;
  /**
   * This featured image will be used as a thumbnail and cover image
   */
  image?: (number | null) | Media;
  site: number | Site;
  slug?: string | null;
  slugLock?: boolean | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  attachments?:
    | {
        file?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  pointOfContact?: string | null;
  pointOfContactEmail?: string | null;
  pointOfContactPhone?: string | null;
  categories?: (number | Category)[] | null;
  publishedAt?: string | null;
  startDate: string;
  endDate?: string | null;
  format: "inperson" | "virtual";
  eventType: "onetime" | "series";
  reviewReady?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Announcements, updates, or press releases related to the organization.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title: string;
  /**
   * A description to be used as a summary
   */
  description?: string | null;
  /**
   * This featured image will be used as a thumbnail and cover image
   */
  image?: (number | null) | Media;
  categories?: (number | Category)[] | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  site: number | Site;
  reviewReady?: boolean | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Downloadable or reference materials like guides and reports.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports".
 */
export interface Report {
  id: number;
  title: string;
  excerpt?: string | null;
  image?: (number | null) | Media;
  reportFiles?:
    | {
        file?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  reportDate?: string | null;
  categories?: (number | Category)[] | null;
  site: number | Site;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  reviewReady?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Downloadable or reference materials like guides and reports.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources".
 */
export interface Resource {
  id: number;
  title: string;
  excerpt?: string | null;
  image?: (number | null) | Media;
  reportFiles?:
    | {
        file?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  resourceDate?: string | null;
  categories?: (number | Category)[] | null;
  site: number | Site;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  reviewReady?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Profiles of key staff or board members, including bios and headshots.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leadership".
 */
export interface Leadership {
  id: number;
  title: string;
  jobTitle: string;
  /**
   * A description to be used as a summary
   */
  description?: string | null;
  /**
   * This featured image will be used as a thumbnail and cover image
   */
  image?: (number | null) | Media;
  /**
   * Alternative text for the image for accessibility
   */
  imageAlt: string;
  /**
   * Detailed biography or description of the leadership member
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  site: number | Site;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Individual pages like About or Contact that aren't part of a content collection.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  subtitle?: string | null;
  label: string;
  image?: (number | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  site: number | Site;
  reviewReady?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Legal or informational pages such as privacy, terms of use, and accessibility.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies".
 */
export interface Policy {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  label: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  site: number | Site;
  reviewReady?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Build and organize site navigation for pages and content sections.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu-site-collection".
 */
export interface MenuSiteCollection {
  id: number;
  items?:
    | (
        | {
            page: number | Page;
            label: string;
            id?: string | null;
            blockName?: string | null;
            blockType: "pageLink";
          }
        | {
            page:
              | "events"
              | "leadership"
              | "news"
              | "posts"
              | "reports"
              | "resources";
            label: string;
            id?: string | null;
            blockName?: string | null;
            blockType: "collectionLink";
          }
        | {
            label: string;
            subitems?:
              | (
                  | {
                      page: number | Page;
                      label: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: "pageLink";
                    }
                  | {
                      page:
                        | "events"
                        | "leadership"
                        | "news"
                        | "posts"
                        | "reports"
                        | "resources";
                      label: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: "collectionLink";
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "dropdown";
          }
      )[]
    | null;
  site: number | Site;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * Set global branding details like site name, logo, and typography.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config-site-collection".
 */
export interface SiteConfigSiteCollection {
  id: number;
  agencyName: string;
  tagline?: string | null;
  primaryColor?:
    | (
        | "blue-cool"
        | "blue-cool-vivid"
        | "blue"
        | "blue-vivid"
        | "blue-warm"
        | "blue-warm-vivid"
        | "cyan"
        | "cyan-vivid"
        | "gold"
        | "gold-vivid"
        | "gray-cool"
        | "gray"
        | "gray-warm"
        | "green-cool"
        | "green-cool-vivid"
        | "green"
        | "green-vivid"
        | "green-warm"
        | "green-warm-vivid"
        | "indigo-cool"
        | "indigo-cool-vivid"
        | "indigo"
        | "indigo-vivid"
        | "indigo-warm"
        | "indigo-warm-vivid"
        | "magenta"
        | "magenta-vivid"
        | "mint-cool"
        | "mint-cool-vivid"
        | "mint"
        | "mint-vivid"
        | "orange"
        | "orange-vivid"
        | "orange-warm"
        | "orange-warm-vivid"
        | "red-cool"
        | "red-cool-vivid"
        | "red"
        | "red-vivid"
        | "red-warm"
        | "red-warm-vivid"
        | "violet"
        | "violet-vivid"
        | "violet-warm"
        | "violet-warm-vivid"
        | "yellow"
        | "yellow-vivid"
      )
    | null;
  secondaryColor?:
    | (
        | "blue-cool"
        | "blue-cool-vivid"
        | "blue"
        | "blue-vivid"
        | "blue-warm"
        | "blue-warm-vivid"
        | "cyan"
        | "cyan-vivid"
        | "gold"
        | "gold-vivid"
        | "gray-cool"
        | "gray"
        | "gray-warm"
        | "green-cool"
        | "green-cool-vivid"
        | "green"
        | "green-vivid"
        | "green-warm"
        | "green-warm-vivid"
        | "indigo-cool"
        | "indigo-cool-vivid"
        | "indigo"
        | "indigo-vivid"
        | "indigo-warm"
        | "indigo-warm-vivid"
        | "magenta"
        | "magenta-vivid"
        | "mint-cool"
        | "mint-cool-vivid"
        | "mint"
        | "mint-vivid"
        | "orange"
        | "orange-vivid"
        | "orange-warm"
        | "orange-warm-vivid"
        | "red-cool"
        | "red-cool-vivid"
        | "red"
        | "red-vivid"
        | "red-warm"
        | "red-warm-vivid"
        | "violet"
        | "violet-vivid"
        | "violet-warm"
        | "violet-warm-vivid"
        | "yellow"
        | "yellow-vivid"
      )
    | null;
  primaryFont?:
    | (
        | "georgia"
        | "helvetica"
        | "merriweather"
        | "open-sans"
        | "public-sans"
        | "roboto-mono"
        | "source-sans-pro"
        | "system"
        | "tahoma"
        | "verdana"
      )
    | null;
  favicon?: (number | null) | Media;
  logo?: (number | null) | Media;
  site: number | Site;
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ("reference" | "custom") | null;
    reference?: {
      relationTo: "posts";
      value: number | Post;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "checkbox";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "country";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "email";
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ("ltr" | "rtl") | null;
                format:
                  | "left"
                  | "start"
                  | "center"
                  | "right"
                  | "end"
                  | "justify"
                  | "";
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "message";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "number";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "select";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "state";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "text";
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "textarea";
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ("message" | "redirect") | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ("ltr" | "rtl") | null;
            format:
              | "left"
              | "start"
              | "center"
              | "right"
              | "end"
              | "justify"
              | "";
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: "posts";
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: "posts";
        value: number | Post;
      } | null)
    | ({
        relationTo: "events";
        value: number | Event;
      } | null)
    | ({
        relationTo: "news";
        value: number | News;
      } | null)
    | ({
        relationTo: "reports";
        value: number | Report;
      } | null)
    | ({
        relationTo: "resources";
        value: number | Resource;
      } | null)
    | ({
        relationTo: "leadership";
        value: number | Leadership;
      } | null)
    | ({
        relationTo: "pages";
        value: number | Page;
      } | null)
    | ({
        relationTo: "policies";
        value: number | Policy;
      } | null)
    | ({
        relationTo: "media";
        value: number | Media;
      } | null)
    | ({
        relationTo: "categories";
        value: number | Category;
      } | null)
    | ({
        relationTo: "sites";
        value: number | Site;
      } | null)
    | ({
        relationTo: "menu-site-collection";
        value: number | MenuSiteCollection;
      } | null)
    | ({
        relationTo: "site-config-site-collection";
        value: number | SiteConfigSiteCollection;
      } | null)
    | ({
        relationTo: "redirects";
        value: number | Redirect;
      } | null)
    | ({
        relationTo: "forms";
        value: number | Form;
      } | null)
    | ({
        relationTo: "form-submissions";
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: "search";
        value: number | Search;
      } | null)
    | ({
        relationTo: "users";
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: "users";
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: "users";
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  categories?: T;
  site?: T;
  content?: T;
  reviewReady?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  "Example Custom Field"?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  location?: T;
  registrationUrl?: T;
  description?: T;
  image?: T;
  site?: T;
  slug?: T;
  slugLock?: T;
  content?: T;
  attachments?:
    | T
    | {
        file?: T;
        id?: T;
      };
  pointOfContact?: T;
  pointOfContactEmail?: T;
  pointOfContactPhone?: T;
  categories?: T;
  publishedAt?: T;
  startDate?: T;
  endDate?: T;
  format?: T;
  eventType?: T;
  reviewReady?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  categories?: T;
  content?: T;
  site?: T;
  reviewReady?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports_select".
 */
export interface ReportsSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  image?: T;
  reportFiles?:
    | T
    | {
        file?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  reportDate?: T;
  categories?: T;
  site?: T;
  content?: T;
  reviewReady?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources_select".
 */
export interface ResourcesSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  image?: T;
  reportFiles?:
    | T
    | {
        file?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  resourceDate?: T;
  categories?: T;
  site?: T;
  content?: T;
  reviewReady?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leadership_select".
 */
export interface LeadershipSelect<T extends boolean = true> {
  title?: T;
  jobTitle?: T;
  description?: T;
  image?: T;
  imageAlt?: T;
  content?: T;
  site?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  subtitle?: T;
  label?: T;
  image?: T;
  content?: T;
  site?: T;
  reviewReady?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies_select".
 */
export interface PoliciesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  label?: T;
  content?: T;
  site?: T;
  reviewReady?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  altText?: T;
  site?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  site?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites_select".
 */
export interface SitesSelect<T extends boolean = true> {
  name?: T;
  initialManagerEmail?: T;
  pagesOrg?: T;
  pagesSiteId?: T;
  orgId?: T;
  bucket?: T;
  users?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu-site-collection_select".
 */
export interface MenuSiteCollectionSelect<T extends boolean = true> {
  items?:
    | T
    | {
        pageLink?:
          | T
          | {
              page?: T;
              label?: T;
              id?: T;
              blockName?: T;
            };
        collectionLink?:
          | T
          | {
              page?: T;
              label?: T;
              id?: T;
              blockName?: T;
            };
        dropdown?:
          | T
          | {
              label?: T;
              subitems?:
                | T
                | {
                    pageLink?:
                      | T
                      | {
                          page?: T;
                          label?: T;
                          id?: T;
                          blockName?: T;
                        };
                    collectionLink?:
                      | T
                      | {
                          page?: T;
                          label?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  site?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config-site-collection_select".
 */
export interface SiteConfigSiteCollectionSelect<T extends boolean = true> {
  agencyName?: T;
  tagline?: T;
  primaryColor?: T;
  secondaryColor?: T;
  primaryFont?: T;
  favicon?: T;
  logo?: T;
  site?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  email?: T;
  sub?: T;
  sites?:
    | T
    | {
        site?: T;
        role?: T;
        id?: T;
      };
  isAdmin?: T;
  selectedSiteId?: T;
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Set global branding details like site name, logo, and typography.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config".
 */
export interface SiteConfig {
  id: number;
  agencyName: string;
  tagline?: string | null;
  primaryColor?:
    | (
        | "blue-cool"
        | "blue-cool-vivid"
        | "blue"
        | "blue-vivid"
        | "blue-warm"
        | "blue-warm-vivid"
        | "cyan"
        | "cyan-vivid"
        | "gold"
        | "gold-vivid"
        | "gray-cool"
        | "gray"
        | "gray-warm"
        | "green-cool"
        | "green-cool-vivid"
        | "green"
        | "green-vivid"
        | "green-warm"
        | "green-warm-vivid"
        | "indigo-cool"
        | "indigo-cool-vivid"
        | "indigo"
        | "indigo-vivid"
        | "indigo-warm"
        | "indigo-warm-vivid"
        | "magenta"
        | "magenta-vivid"
        | "mint-cool"
        | "mint-cool-vivid"
        | "mint"
        | "mint-vivid"
        | "orange"
        | "orange-vivid"
        | "orange-warm"
        | "orange-warm-vivid"
        | "red-cool"
        | "red-cool-vivid"
        | "red"
        | "red-vivid"
        | "red-warm"
        | "red-warm-vivid"
        | "violet"
        | "violet-vivid"
        | "violet-warm"
        | "violet-warm-vivid"
        | "yellow"
        | "yellow-vivid"
      )
    | null;
  secondaryColor?:
    | (
        | "blue-cool"
        | "blue-cool-vivid"
        | "blue"
        | "blue-vivid"
        | "blue-warm"
        | "blue-warm-vivid"
        | "cyan"
        | "cyan-vivid"
        | "gold"
        | "gold-vivid"
        | "gray-cool"
        | "gray"
        | "gray-warm"
        | "green-cool"
        | "green-cool-vivid"
        | "green"
        | "green-vivid"
        | "green-warm"
        | "green-warm-vivid"
        | "indigo-cool"
        | "indigo-cool-vivid"
        | "indigo"
        | "indigo-vivid"
        | "indigo-warm"
        | "indigo-warm-vivid"
        | "magenta"
        | "magenta-vivid"
        | "mint-cool"
        | "mint-cool-vivid"
        | "mint"
        | "mint-vivid"
        | "orange"
        | "orange-vivid"
        | "orange-warm"
        | "orange-warm-vivid"
        | "red-cool"
        | "red-cool-vivid"
        | "red"
        | "red-vivid"
        | "red-warm"
        | "red-warm-vivid"
        | "violet"
        | "violet-vivid"
        | "violet-warm"
        | "violet-warm-vivid"
        | "yellow"
        | "yellow-vivid"
      )
    | null;
  primaryFont?:
    | (
        | "georgia"
        | "helvetica"
        | "merriweather"
        | "open-sans"
        | "public-sans"
        | "roboto-mono"
        | "source-sans-pro"
        | "system"
        | "tahoma"
        | "verdana"
      )
    | null;
  favicon?: (number | null) | Media;
  logo?: (number | null) | Media;
  _status?: ("draft" | "published") | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Build and organize site navigation for pages and content sections.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu".
 */
export interface Menu {
  id: number;
  items?:
    | (
        | {
            page: number | Page;
            label: string;
            id?: string | null;
            blockName?: string | null;
            blockType: "pageLink";
          }
        | {
            page:
              | "events"
              | "leadership"
              | "news"
              | "posts"
              | "reports"
              | "resources";
            label: string;
            id?: string | null;
            blockName?: string | null;
            blockType: "collectionLink";
          }
        | {
            label: string;
            subitems?:
              | (
                  | {
                      page: number | Page;
                      label: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: "pageLink";
                    }
                  | {
                      page:
                        | "events"
                        | "leadership"
                        | "news"
                        | "posts"
                        | "reports"
                        | "resources";
                      label: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: "collectionLink";
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: "dropdown";
          }
      )[]
    | null;
  _status?: ("draft" | "published") | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config_select".
 */
export interface SiteConfigSelect<T extends boolean = true> {
  agencyName?: T;
  tagline?: T;
  primaryColor?: T;
  secondaryColor?: T;
  primaryFont?: T;
  favicon?: T;
  logo?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu_select".
 */
export interface MenuSelect<T extends boolean = true> {
  items?:
    | T
    | {
        pageLink?:
          | T
          | {
              page?: T;
              label?: T;
              id?: T;
              blockName?: T;
            };
        collectionLink?:
          | T
          | {
              page?: T;
              label?: T;
              id?: T;
              blockName?: T;
            };
        dropdown?:
          | T
          | {
              label?: T;
              subitems?:
                | T
                | {
                    pageLink?:
                      | T
                      | {
                          page?: T;
                          label?: T;
                          id?: T;
                          blockName?: T;
                        };
                    collectionLink?:
                      | T
                      | {
                          page?: T;
                          label?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}

declare module "payload" {
  export interface GeneratedTypes extends Config {}
}
