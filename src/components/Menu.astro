---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import Search from "./Search.astro";
import Link from "./Link.astro";
import close from "@uswds-images/usa-icons/close.svg";
interface Props {
  title: string;
  items: CollectionEntry<"menu">["data"]["items"];
  searchAccessKey: string;
  searchAffiliate: string;
}

const currentPath = Astro.url.pathname;
const { title, items = [], searchAccessKey, searchAffiliate } = Astro.props;
---

<header class="usa-header usa-header--extended" role="banner">
  <div class="usa-navbar">
    <div class="usa-logo">
      <em class="usa-logo__text">
        <Link href="/" title={title}>{title}</Link>
      </em>
    </div>
    <button class="usa-menu-btn">Menu</button>
  </div>
  <nav
    id="menu-navigation"
    aria-label="Menu navigation"
    role="navigation"
    class="usa-nav"
  >
    <div class="usa-nav__inner">
      <button class="usa-nav__close">
        <Image src={close} alt="close" />
      </button>
      <ul class="usa-nav__primary usa-accordion">
        {
          items.map((item) => {
            if (item.blockType === "dropdown") {
              return (
                <li class="usa-nav__primary-item">
                  <button
                    class="usa-accordion__button usa-nav__link"
                    aria-expanded="false"
                    aria-controls={`nav-${item.id || Math.random().toString(36).substr(2, 9)}`}
                  >
                    <span set:html={item.label} />
                  </button>
                  <ul
                    id={`nav-${item.id || Math.random().toString(36).slice(2, 11)}`}
                    class="usa-accordion__content usa-nav__submenu"
                  >
                    {item.subitems?.map((subitem) => {
                      let subHref = "#";

                      if (subitem.blockType === "pageLink") {
                        subHref = `/${subitem.page.slug}`;
                      } else if (subitem.blockType === "collectionLink") {
                        subHref = `/${subitem.page}`;
                      }

                      const isSubActive =
                        currentPath === subHref ||
                        currentPath.startsWith(subHref + "/");

                      return (
                        <li class="usa-nav__submenu-item">
                          <Link
                            className={`usa-nav__link${isSubActive ? " usa-current" : ""}`}
                            href={subHref}
                            aria-current={isSubActive ? "page" : undefined}
                          >
                            <span set:html={subitem.label} />
                          </Link>
                        </li>
                      );
                    })}
                  </ul>
                </li>
              );
            }

            let href = "#";
            let label = "";

            if (item.blockType === "navItem") {
              href = `/${item.page.slug}`;
              label = item.label;
            } else if (item.blockType === "externalLink") {
              href = item.url;
              label = item.label;
            } else if (item.blockType === "pageLink") {
              href = `/${item.page.slug}`;
              label = item.label;
            } else if (item.blockType === "collectionLink") {
              href = `/${item.page}`;
              label = item.label;
            }

            const isActive =
              href !== "#" &&
              (currentPath === href || currentPath.startsWith(href + "/"));

            return (
              <li class="usa-nav__primary-item">
                <Link
                  className={`usa-nav__link${isActive ? " usa-current" : ""}`}
                  href={href}
                  aria-current={isActive ? "page" : undefined}
                >
                  <span set:html={label} />
                </Link>
              </li>
            );
          })
        }
      </ul>
      <div class="usa-nav__secondary">
        <ul class="usa-nav__secondary-links"></ul>
        <Search
          searchAccessKey={searchAccessKey}
          searchAffiliate={searchAffiliate}
        />
      </div>
    </div>
  </nav>
</header>
