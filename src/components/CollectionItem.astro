---
import Link from "@/components/Link.astro";
import SectionHeader from "@/components/SectionHeader.astro";
import Tags, { type Tag } from "@/components/Tags.astro";
import Media from "@/components/Media.astro";
import { parseDateParts, type DateParts } from "@/utilities/dates";
import type { MediaValueProps } from "@/env";

export interface Props {
  title: string;
  description?: string;
  date?: string | DateParts;
  startDate?: string | DateParts;
  endDate?: string | DateParts;
  tags?: Tag[];
  media?: MediaValueProps;
  link?: string;
  linkText?: string;
  showEvent?: boolean;
  jobTitle?: string;
  isLeadership?: boolean;
}

const {
  title = "",
  description = "",
  date = "",
  startDate = "",
  tags = [],
  media = null,
  link = "",
  showEvent = false,
  jobTitle = "",
  isLeadership = false,
} = Astro.props;

function normalizeDate(input?: string | DateParts): DateParts | null {
  return input
    ? typeof input === "string"
      ? parseDateParts(input)
      : input
    : null;
}

const dateParts = normalizeDate(date);
const startParts = normalizeDate(startDate);

const hasTags = tags?.length > 0;
const hasDescription = !!description?.trim();

const hasValidDate = !!(
  dateParts &&
  dateParts.raw instanceof Date &&
  !isNaN(dateParts.raw.getTime())
);
---

<>
  <li class="usa-collection__item maxw-tablet">
    {
      media?.thumbnailURL && (
        <Media className="usa-collection__img" media={media} />
      )
    }
    {
      showEvent && startParts?.raw && (
        <div class="usa-collection__calendar-date">
          <time datetime={startParts.raw.toISOString()}>
            <span class="usa-collection__calendar-date-month">
              {startParts.abbrMonth}
            </span>
            <span class="usa-collection__calendar-date-day">
              {startParts.day}
            </span>
          </time>
        </div>
      )
    }
    <div class="usa-collection__body">
      <SectionHeader
        headingLevel="h2"
        class="usa-collection__heading font-body-lg"
      >
        <Link href={link}>{title}</Link>
      </SectionHeader>
      {
        isLeadership && jobTitle && (
          <div class="usa-collection__description">
            <h3 class="usa-collection__job-title font-body-md">{jobTitle}</h3>
            {description && <p>{description}</p>}
          </div>
        )
      }
      {
        hasDescription && !isLeadership && (
          <div class="usa-collection__description">
            <p set:html={description.replace(/\n/g, "<br>")} />
          </div>
        )
      }
      {
        hasValidDate && !showEvent && (
          <ul class="usa-collection__meta" aria-label="More information">
            <li class="usa-collection__meta-item">
              <time datetime={dateParts.raw.toISOString()}>
                {dateParts.full}
              </time>
            </li>
          </ul>
        )
      }
      {
        hasTags && (
          <ul
            class="usa-collection__meta display-flex margin-top-2"
            aria-label="Tag links"
          >
            <Tags tags={tags} />
          </ul>
        )
      }
    </div>
  </li>
</>

<style is:global>
  .usa-collection__footer {
    gap: var(--spacing-2);
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-start;
    margin-top: var(--spacing-2);
  }
  .usa-collection__meta {
    font-size: var(--font-size-sm);
    margin-top: var(--spacing-2);
  }

  .usa-collection__item:has(.usa-collection__job-title) .usa-collection__img {
    width: var(--spacing-40);
    height: var(--spacing-40);
    margin-right: var(--spacing-6);
    object-fit: cover;
  }
</style>
