---
import Layout from "@/layouts/Layout.astro";
import PagesSection from "@/components/PagesSection.astro";
import CollectionItemList from "@/components/CollectionItemList.astro";
import { paginate } from "@/utilities/pagination";
import PaginationNav from "@/components/PaginationNav.astro";
import {
  createPagingStaticPath,
  fetchCollection,
  leadershipMapper,
} from "@/utilities/fetch";
import type { CollectionEntry } from "astro:content";

export const PAGE_SIZE = import.meta.env.PAGE_SIZE || 10;
const { page } = Astro.params;

const currentPage = parseInt(page) || 1;

const collectionName = "leadership";
const data = await fetchCollection(collectionName);
const people: CollectionEntry<typeof collectionName>["data"][] =
  data?.docs || [];

const sortedLeadership = people.sort((a, b) => {
  const dateA = new Date(a.createdAt);
  const dateB = new Date(b.createdAt);
  return dateB.getTime() - dateA.getTime();
});

const { totalPages, paginatedItems } = paginate(
  sortedLeadership,
  currentPage,
  PAGE_SIZE,
);

const items = paginatedItems.map(leadershipMapper);

export const getStaticPaths = createPagingStaticPath(PAGE_SIZE, "leadership");
export const prerender = import.meta.env.PREVIEW_MODE || false;
---

<Layout title="Leadership">
  <PagesSection heading="Leadership" color="gray-10">
    <CollectionItemList items={items} />
    {
      people.length >= PAGE_SIZE && (
        <PaginationNav
          currentPage={currentPage}
          totalPages={totalPages}
          basePath="/leadership/page"
        />
      )
    }
  </PagesSection>
</Layout>
